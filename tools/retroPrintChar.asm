#org 0x8000
;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Start:		LDI 0xfe STA 0xffff
            JPS _Clear         
			CLB _XPos
			LDI 3
			STA _YPos

			JPS printLine
			'! "#$%&''()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\;]^_', 0

			CLB _XPos
			LDI 23
			STA _YPos

			JPS printLine
			'! "#$%&''()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\;]^_', 0

			HLT
; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
; Outputs the text immediately after JPS
; must be terminated 0
printLine:	LDS 1
			STA ptr1+1
			LDS 2
			STA ptr1+0
			INW ptr1
			INW ptr1
pL1:		LDR ptr1
			CPI 0x00
			BNE pL2
			DEW ptr1
			LDA ptr1+0
			STS 2
			LDA ptr1+1
			STS 1
			RTS
pL2:		PHS JPS printCharXY PLS
			INW ptr1
			JPA pL1
ptr1:		0x00, 0x00,
; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
; PHS Char
; outputs a character at the position _XPos(0..39), _YPos (0..23) grid 10x10 pixel
; XPos and _YPos are updated, there is no scrolling
printCharXY:	
			CLB	xPos16+0x01
			LDA _XPos
			LSL
			STA xPos16+0x00 ; xPos16 = _XPos * 2
			PHS				; memorize _XPos * 2
			LLW	xPos16		; xPos16 = _XPos * 4
			LLW	xPos16		; xPos16 = _XPos * 8
			PLS				; Restore _XPos * 2
			ADW xPos16		; xPos16 = _XPos * 8 + _XPos * 2 = _XPos * 10
			LDA xPos16+0x00
			PHS				; XPos low
			LDA xPos16+0x01
			PHS				; XPos hight
			LDA _YPos
			LSL
			STA yPos8
			LL2
			ADA yPos8
			PHS				; yPos = _YPos* 10
			LDS 6			; Char is LDS 3+3
			PHS
			JPS printChar
			PLS PLS PLS PLS
			INB _XPos
			LDA _XPos
			CPI 40
			BCC pCxy1
			CLB _XPos
			INB _YPos
			LDA _YPos
			CPI 24
			BCC pCxy1
			CLB _YPos
pCxy1:		RTS
xPos16:		0x00, 0x00,
yPos8:		0x00,
; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
; print char 0x20..0x5f
; PHS: xLow, xHiht, y, char
printChar:		LDI 1
				STA _tmp+1
                LDS 4               ; 
                LL6 STA addr+0      ;
                LDS 4               ;
                RL7 ANI 63 ADI 0xc3 STA addr+1
                LDS 5               ; xHight
                DEC 
                LDS 6               ; xLow
                RL6 ANI 63 ADI 12 ORB addr+0
                LDS 6 ANI 7 STA shift
                LDI 8 STA scnt		; scnt Loop counter 8 bytes
                LDS 3
				CPI 0x60
				BCS rPCrts
				SBI 0x20
				BCC rPCrts
				CPI 0x20
				BCC pC1
				SBI 0x20
				CLB _tmp+1
pC1:			LL3 STA _tmp	; A = Char * 8
clineloop:      LDA _tmp+1
				CPI 0x00
				BEQ cl1
				LDA _tmp
				LTA	alphaNumSprites
				JPA cl2
cl1:			LDA _tmp
				LTA	alphaNumSprites2
cl2:            STA buffer+0        
                CLB buffer+1        
                LXA shift           
                DEX                 
                BCC cshiftdone     
cshiftloop:     LLW buffer+0        
                DEX                 
                BCS cshiftloop      
cshiftdone:		LDA buffer+0        
                ORR addr            
                STR addr            
                INW addr            
                LDA buffer+1        
                ORR addr            
                STR addr            
ccommon:        LDI 63              
                ADW addr            
				INB _tmp
                DEB scnt
                BNE clineloop		
rPCrts:         RTS
_tmp:			0x00,0x00,
scnt:           0x00				
shift:          0xff				
addr:           0xffff				
buffer:         0xff, 0xff, 0xff	
; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
alphaNumSprites:	
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,	; 0x20   space
	0x38,0x38,0x38,0x38,0x20,0x20,0x00,0x30,	; 0x21   !
	0x00,0x36,0x36,0x24,0x00,0x00,0x00,0x00,	; 0x22   "
	0x66,0xff,0xff,0x66,0x66,0xff,0xff,0x66,	; 0x23   #
	0x18,0x7e,0x03,0x7e,0xe0,0xe0,0x7e,0x18,	; 0x24   $
	0xc7,0xe5,0x77,0x38,0x1c,0xee,0xa7,0xe3,	; 0x25   %
	0x06,0x09,0x09,0x46,0x6d,0x11,0x71,0xce,	; 0x26   &
	0x00,0x0c,0x0c,0x08,0x00,0x00,0x00,0x00,	; 0x27   '
	0x30,0x18,0x0c,0x0c,0x0c,0x0c,0x18,0x30,	; 0x28   (
	0x0c,0x18,0x30,0x30,0x30,0x30,0x18,0x0c,	; 0x29   )
	0x99,0x5a,0x3c,0xff,0xff,0x3c,0x5a,0x99,	; 0x2a   *
	0x18,0x18,0x18,0xff,0xff,0x18,0x18,0x18,	; 0x2b   +
	0x00,0x00,0x00,0x00,0x0c,0x0c,0x08,0x04,	; 0x2c   ,
	0x00,0x00,0x00,0xff,0xff,0x00,0x00,0x00,	; 0x2d   -
	0x00,0x00,0x00,0x00,0x00,0x0c,0x0c,0x00,	; 0x2e   .
	0xc0,0xe0,0x70,0x38,0x1c,0x0e,0x07,0x03,	; 0x2f   /
	0xff,0xc3,0xc3,0xc3,0xf3,0xf3,0xf3,0xff,	; 0x30   0
	0x1e,0x1e,0x18,0x18,0x18,0x18,0x7e,0x7e,	; 0x31   1
	0xff,0xc3,0xc0,0xff,0x03,0x03,0xf3,0xff,	; 0x32   2
	0xff,0xc3,0xc0,0xfc,0xc0,0xc0,0xc3,0xff,	; 0x33   3
	0xcf,0xcf,0xcf,0xff,0xc0,0xc0,0xc0,0xc0,	; 0x34   4
	0xff,0x03,0x03,0xff,0xf0,0xf0,0xf0,0xff,	; 0x35   5
	0xff,0xc3,0x03,0xff,0xe3,0xe3,0xe3,0xff,	; 0x36   6
	0xff,0xf0,0xf0,0xf0,0x3c,0x0c,0x0c,0x0c,	; 0x37   7
	0xfc,0xcc,0xcc,0xff,0xc3,0xc3,0xc3,0xff,	; 0x38   8
	0xff,0xc3,0xc3,0xff,0xf0,0xf0,0xf0,0xf0,	; 0x39   9
	0x00,0x0c,0x0c,0x00,0x00,0x0c,0x0c,0x00,	; 0x3a   :
	0x00,0x18,0x18,0x00,0x18,0x18,0x10,0x08,	; 0x3b   ;
	0xc0,0xf0,0x7c,0x0f,0x0f,0x7c,0xf0,0xc0,	; 0x3c   <
	0x00,0xff,0xff,0x00,0x00,0xff,0xff,0x00,	; 0x3d   =
	0x03,0x0f,0x3c,0xf0,0xf0,0x3c,0x0f,0x03, 	; 0x3e   >
	0x3c,0x62,0x70,0x38,0x18,0x18,0x00,0x18,	; 0x3f   ?
alphaNumSprites2:	
	0x3c,0x42,0x99,0xa5,0x45,0x39,0x02,0x7c,	; 0x40   @
	0xfc,0xcc,0xcc,0xff,0xc3,0xc3,0xf3,0xf3,	; 0x41   A
	0x3f,0x33,0x33,0xff,0xc3,0xc3,0xc3,0xff,	; 0x42   B
	0xff,0xc3,0x03,0x03,0x0f,0x0f,0xcf,0xff,	; 0x43   C
	0x3f,0xc3,0xc3,0xc3,0xcf,0xcf,0xcf,0x3f,	; 0x44   D
	0xff,0x0f,0x0f,0x3f,0x03,0x03,0x03,0xff,	; 0x45   E
	0xff,0x0f,0x0f,0x3f,0x03,0x03,0x03,0x03,	; 0x46   F
	0xff,0xc3,0x03,0x03,0xf3,0xf3,0xc3,0xff,	; 0x47   G
	0xc3,0xc3,0xc3,0xff,0xcf,0xcf,0xcf,0xcf,	; 0x48   H
	0x08,0x08,0x08,0x38,0x38,0x38,0x38,0x38,	; 0x49   I
	0x20,0x20,0x20,0xe0,0xe0,0xe0,0xe3,0xff,	; 0x4a   J
	0xc3,0xe3,0x73,0x3f,0xff,0xcf,0xcf,0xcf,	; 0x4b   K
	0x03,0x03,0x03,0x0f,0x0f,0x0f,0x0f,0xff,	; 0x4c   L
	0xc3,0xcf,0xff,0xff,0xc3,0xc3,0xc3,0xc3,	; 0x4d   M
	0xc3,0xc3,0xcf,0xff,0xff,0xf3,0xc3,0xc3,	; 0x4e   N
	0xff,0xf3,0xf3,0xf3,0xc3,0xc3,0xc3,0xff,	; 0x4f   O
	0xff,0xc3,0xc3,0xff,0x0f,0x0f,0x0f,0x0f,	; 0x50   P
	0xff,0xf3,0xf3,0xc3,0xc3,0x23,0x63,0xdf,	; 0x51   Q
	0xff,0xc3,0xc3,0xff,0x3f,0x3f,0xcf,0xcf,	; 0x52   R
	0xff,0xc3,0x03,0xff,0xf0,0xf0,0xf3,0xff,	; 0x53   S
	0xff,0x0c,0x0c,0x3c,0x3c,0x3c,0x3c,0x3c,	; 0x54   T
	0xc3,0xc3,0xc3,0xcf,0xcf,0xcf,0xcf,0xff,	; 0x55   U
	0xcf,0xcf,0xcf,0xcf,0xcf,0xff,0x3c,0x0c,	; 0x56   V
	0xc3,0xc3,0xc3,0xc3,0xff,0xff,0xcf,0xc3,	; 0x57   W
	0xc3,0xc3,0xc3,0x3c,0x3c,0xc3,0xc3,0xc3,	; 0x58   X
	0xf3,0xf3,0xf3,0xff,0x3c,0x3c,0x3c,0x3c,	; 0x59   Y
	0xff,0x81,0x80,0xf8,0x3f,0x01,0xc1,0xff,	; 0x5a   Z
	0x7e,0x06,0x06,0x06,0x1e,0x1e,0x1e,0x7e,	; 0x5b   [
	0x03,0x07,0x0e,0x1c,0x38,0x70,0xe0,0xc0,	; 0x5c   \;
	0x7e,0x60,0x60,0x60,0x78,0x78,0x78,0x7e,	; 0x5d   ]
	0x18,0x3c,0x66,0xc3,0x00,0x00,0x00,0x00,	; 0x5e   ^
	0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,	; 0x5f   _
; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#mute ; MinOS API definitions generated by 'asm os.asm -s_'

#org 0xb000 _Start:
#org 0xb003 _Prompt:
#org 0xb006 _ReadLine:
#org 0xb009 _ReadSpace:
#org 0xb00c _ReadHex:
#org 0xb00f _SerialWait:
#org 0xb012 _SerialPrint:
#org 0xb015 _FindFile:
#org 0xb018 _LoadFile:
#org 0xb01b _SaveFile:
#org 0xb01e _MemMove:
#org 0xb021 _Random:
#org 0xb024 _ScanPS2:
#org 0xb027 _ReadInput:
#org 0xb02a _WaitInput:
#org 0xb02d _ClearVRAM:
#org 0xb030 _Clear:
#org 0xb033 _ClearRow:
#org 0xb036 _SetPixel:
#org 0xb039 _ClrPixel:
#org 0xb03c _GetPixel:
#org 0xb03f _Char:
#org 0xb042 _Line:
#org 0xb045 _Rect:
#org 0xb048 _Print:
#org 0xb04b _PrintChar:
#org 0xb04e _PrintHex:
#org 0xb051 _ScrollUp:
#org 0xb054 _ScrollDn:
#org 0xb057 _ResetPS2:

#org 0xbcb0 _ReadPtr:
#org 0xbcb2 _ReadNum:
#org 0xbcc4 _RandomState:
#org 0xbccc _XPos:
#org 0xbccd _YPos:
#org 0xbcce _ReadBuffer:
